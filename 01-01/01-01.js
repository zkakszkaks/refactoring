/**
 * [01] 리팩터링
 *코드를 이해하기 쉽고 수정하기 편하게 만드는 열쇠
 *
 * [02] 디자인 패턴과 리팩터링
 * 디자인 패턴은 '리팩터링을 수행하여 도달하려는 목표'를 제시한다
 *
 * [03] 책에서 다루는 내용
 * 1. 리팩터링 원리
 * 2. 좋은 리팩터링 습관을 설명
 * 3. 언제 어떤 상황에 코드를 분석해서 개선해야 하는지 알려준다.
 *
 * [04] 책의 핵심 내용
 * 1. 6장 부터 12장 까지(다양한 리팩터링 기법을 모아 놓은 카달로그다)
 * 2. 각 절은 리팩터링 기법 하나를 주제로 코드를 개선해야 하는 배경과 검증된 절차를 설명한다.
 * 3. 각 기법의 절차를 이해해야만 체계적이고 절제된 리팩터링을 할 수 있다.
 *
 * [05] 책을 읽고 할 수 있는 일
 * 1. 리팩터링 기법을 활용하면 자신의 코드를 한 번에 한 단계씩 수정하면서,
 * 설계 개선 과정에서 실수를 범할 위험을 줄일 수 있다.
 *
 *
 * [06] 시스템을 개발하면서 리팩터링을 활용해 코드를 꾸준히 정리해야 한다.
 *
 * [07] 리팩터링이란?
 * 1. 겉으로 드러나는 코드의 기능(겉보기 동작)은 바꾸지 않으면서 내부 구조를 개선 하는 방식
 *
 **/
